version: '3'

services:
  demo-api-mongo:
    build: .
    image: golang:1.14
    volumes:
      - ./:/go/src
      - ./.netrc:/root/.netrc
    working_dir: /go/src
    ports:
      - "6551:6551"
    depends_on:
      - redis
      - mongo
    environment:
      - GOPROXY=https://goproxy.cn
      - GOPRIVATE=github.com/secure-for-ai
      - ENV=prod
    container_name: secureai-dev-demo-api-mongo
    entrypoint: go run main.go
  mongo:
    image: mongo:4.2.6
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
      # - ./mongod.conf:/etc/mongod.conf
      - ./replica-init.js:/docker-entrypoint-initdb.d/replica-init.js
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=gtest
    container_name: secureai-dev-mongo
    # RUN echo "rs.initiate();" > /docker-entrypoint-initdb.d/replica-init.js
    command: ["mongod", "--auth", "--bind_ip_all", "--replSet", "rs0" ]
  redis:
    image: redis
    ports:
      - "6379:6379"
    environment:
      - RedisPass=password
    volumes:
      - ./data/redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    container_name: secureai-dev-redis
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - demo-api-mongo:demo-api-mongo
    container_name: secureai-dev-nginx
